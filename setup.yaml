---
- name: Create VPC in specific region and launch an EC2 instance in it with public ip
  hosts: localhost
  connection: local
  gather_facts: false
  user: ubuntu
  vars:
    ec2_region_id: us-east-1
    ec2_key_pair_name: aws-workshop
    ec2_vpc_sg_name: vpc_service_sg
    ec2_host_group_name: ec2_hosts
    ec2_image_id: ami-a73264ce
    ec2_instance_type: t1.micro

  tasks:
  - name: Create VPC with a Single Public Subnet Only
    local_action:
      module: ec2_vpc
      state: present
      cidr_block: 10.0.0.0/16
      dns_hostnames: yes
      dns_support: yes
      wait: yes
      subnets:
        - cidr: 10.0.0.0/24
      internet_gateway: yes
      route_tables:
        - subnets:
          - 10.0.0.0/24
          routes:
            - dest: 0.0.0.0/0
              gw: igw
      region: "{{ec2_region_id}}"
    register: vpc
  - debug: msg="Created VPC subnet {{item.id}} for {{vpc.vpc_id}}"
    with_items: vpc.subnets

# Now we have to run ec2_group module two times to create it first and get group id, and then add 'all' proto to it
# There will be a fix in ansible soon
  - name: Create VPC security group with ssh proto open to get group id first
    local_action:
      module: ec2_group
      name: "{{ec2_vpc_sg_name}}"
      description: VPC security group
      vpc_id: "{{vpc.vpc_id}}"
      region: "{{ec2_region_id}}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
    register: sg
  - name: Update VPC security group with ssh http and https open
    local_action:
      module: ec2_group
      name: "{{ec2_vpc_sg_name}}"
      description: VPC security group with ssh http and https open
      vpc_id: "{{vpc.vpc_id}}"
      region: "{{ec2_region_id}}"
      rules:
        - proto: all
          group_id: "{{sg.group_id}}"
        - proto: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
    register: sg
  - debug: msg="Created VPC security group {{sg.group_id}}"

  - name: Launch EC2 instance in VPC
    local_action:
      module: ec2
      keypair: "{{ec2_key_pair_name}}"
      group_id: "{{sg.group_id}}"
      instance_type: "{{ec2_instance_type}}"
      image: "{{ec2_image_id}}"
      instance_tags: '{"db":"mysql", "server":"service"}'
      wait: yes
      vpc_subnet_id: "{{vpc.subnets[0].id}}"
      assign_public_ip: yes
      region: "{{ec2_region_id}}"
    register: ec2

  - name: Wait for SSH to come up
    local_action: wait_for host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
    with_items: ec2.instances

  - debug: msg="Created EC2 instance {{item.public_dns_name}}"
    with_items: ec2.instances

